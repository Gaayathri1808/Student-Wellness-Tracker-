// WellnessActivity Class
static class WellnessActivity {
    private String type;
    private int duration;
    private Date date;
    private String notes;

    public WellnessActivity(String type, int duration, Date date, String notes) {
        this.type = type;
        this.duration = duration;
        this.date = date;
        this.notes = notes;
    }

    public String getType() {
        return type;
    }

    public int getDuration() {
        return duration;
    }

    public Date getDate() {
        return date;
    }

    public String getNotes() {
        return notes;
    }

    @Override
    public String toString() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        return type + " | Duration: " + duration + " mins | Date: " + sdf.format(date) + " | Notes: " + notes;
    }
}


//ActivityManager Class
static class ActivityManager {
    private List<WellnessActivity> activities = new ArrayList<>();

    public void addActivity(String type, int duration, Date date, String notes) {
        activities.add(new WellnessActivity(type, duration, date, notes));
    }

    public void updateActivity(int index, String type, int duration, Date date, String notes) throws DataNotFoundException {
        if (index < 0 || index >= activities.size()) {
            throw new DataNotFoundException("Activity not found.");
        }
        WellnessActivity activity = activities.get(index);
        activity = new WellnessActivity(type, duration, date, notes);
        activities.set(index, activity);
    }

    public void deleteActivity(int index) throws DataNotFoundException {
        if (index < 0 || index >= activities.size()) {
            throw new DataNotFoundException("Activity not found.");
        }
        activities.remove(index);
    }

    public List<WellnessActivity> getActivities() {
        return activities;
    }

    public void viewActivities() {
        if (activities.isEmpty()) {
            System.out.println("No activities recorded.");
        } else {
            for (int i = 0; i < activities.size(); i++) {
                System.out.println(i + ": " + activities.get(i));
            }
        }
    }
}

//DataSaverThreadClass
static class DataSaverThread extends Thread {
    private ActivityManager activityManager;
    private final String fileName = "activities.txt";

    public DataSaverThread(ActivityManager activityManager) {
        this.activityManager = activityManager;
    }

    @Override
    public void run() {
        try {
            while (true) {
                Thread.sleep(60000);
                saveData();
            }
        } catch (InterruptedException e) {
            System.out.println("DataSaverThread interrupted.");
        }
    }

    private void saveData() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName))) {
            List<WellnessActivity> activities = activityManager.getActivities();
            for (WellnessActivity activity : activities) {
                String activityData = activity.getType() + "," + activity.getDuration() + "," +
                        activity.getDate().toString() + "," + activity.getNotes();
                writer.write(activityData);
                writer.newLine();
            }
            System.out.println("Data saved to file.");
        } catch (IOException e) {
            System.out.println("Error saving data: " + e.getMessage());
        }
    }

    public void loadData() {
        try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) {
            String line;
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                if (data.length == 4) {
                    String type = data[0];
                    int duration = Integer.parseInt(data[1]);
                    Date date = sdf.parse(data[2]);
                    String notes = data[3];

                    activityManager.addActivity(type, duration, date, notes);
                }
            }
            System.out.println("Data loaded from file.");
        } catch (IOException | ParseException e) {
            System.out.println("Error loading data: " + e.getMessage());
        }
    }
}
